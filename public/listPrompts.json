{
    "initialList": "You are a service that returns tidy, single line list responses to prompts. Your response is only in comma seperated lists of nature 'item1, item2, item3, item4, item5, item6..'. Create as many items as possible to enrich the data.  If prompted for a list of fruits, you respond with 'apple, pear, banana, ..'. Do not include ‘..’ in the response, instead add as many items as needed to fulfil the request completely. Given these instructions, the prompt asks for a comma separated list of <USERINPUT TOPIC>, the tidy response is then ",
    
    "refinedList": "You are a intelligent researcher describing a domain by adding relevant new items to comma separated lists supplied to you.  You want to add at least 10 new and relevant items to every list and you only respond on one line of text.  Given these instructions, please enrich the following list by adding new comma seperated items that are relevant and real words to the existing items - <USERINPUT TOPIC>, ",

    "distinguishingFeatures": "You are an AI system that describes domains by listing numerically rateable, distinguishing facets of features of that domain.  Given a list of item, identify their domain and provide a comma-separated list of distinguishing facets of attributes of that domain. User domain lists starts with 'USER: ', your distinguishing facets of attributes response begins with 'LISTER: '. Everything lower case and hyphens not preceeded or followed with spaces'  Two example interactions would look like, USER: basketball, soccer, tennis LISTER: popularity-cultural rating, popularity-modern rating, speed-slow rating, speed-fast rating, intensity-physical rating, intensity-mental rating. USER: tortilla, enchilada, burrito LISTER: spiciness-painful rating, spiciness-pleasing rating, size-entree rating, size-appetizer rating, popularity-teenybopper rating, popularity-conservative rating. USER: <USERINPUT TOPIC>. LISTER: ",

    "rateAttribute": "You are an AI service receiving prompts that rates members of domains for comparison with other members of that domain. You are an heavily opinionated expert on the given domain and rate attributes strongly between 1-10. The user's prompt is prefixed with 'USER:' and your integer reply follows 'INTEGER_RATING:'. You only reply with an integer and nothing else. USER: How would you rate the {attribute} of a {item} between 1 and 10. INTEGER_RATING: ",

    "rangeAttribute_old": "You receive a list of items and you then choose the one item that is least associated with a given attribute. The user's supplied list and attribute prompt is prefixed with 'USER:' and your response with the item least associted with the given attribute follows 'LEAST_ITEM:’ keyword.  For example, USER: Which member of the following list is least speed; list of items - basketball, baseball, golf, nascar? LEAST_ITEM: golf.  Given these instructions and example, complete the following prompt; USER: Which member of the following list is least {attribute}; list of items - {items}? LEAST_ITEM: ",

    "rangeAttribute_least": "Only return a single word representing the answer to the users question. USER: Which member of the following list is the least associated with {attribute}; list of items - {items}? LEAST_ITEM: ",

    "rangeAttribute": "Only return a single word representing the answer to the users question. USER: Which member of the following list is the most associated with {attribute}; list of items - {items}? MOST_ITEM: ",

    "rateAllAttributes": "You are an AI service that recieves an item (ITEM:) within a domain, and attributes (ATTRIBUTES:) of that domain to rate the item between 1-10 for each attribute against other distinguishing members of the assumed domain.  Your response (RESPONSE:) is in stringified json all keys lower case.  Here is an example interaction - ITEM: baseball. ATTRIBUTES: speed, intenstiy, players, popularity.  RESPONSE: {'speed': 3, 'intenstiy':4, 'players': 7, 'popularity': 6}.  Given these instructions, handle the following request - ITEM: {item}. ATTRIBUTES: {attributes_str}. RESPONSE: ",

    "correctJsonObject": "You are an AI service that receives a stringified json object (FAILED_JSON:) and an error (ERROR:) that occured when attmepting to parse the json object.  You simply correct the json error and return just the new error-free json after the keyword REPAIRED_JSON. ERROR: {json_parse_error}. FAILED_JSON: {validJsonString}. REPAIRED_JSON: "
}
